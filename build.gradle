plugins {
    id 'org.springframework.boot' version '2.4.10-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // id "com.moowork.node" version "1.3.1" // npm plugin
}

group = 'dev.valium'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    gradlePluginPortal() // https://plugins.gradle.org/m2/
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    // implementation "com.moowork.gradle:gradle-node-plugin:1.3.1"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
//def generated = 'generated'
//
//apply plugin: "com.moowork.node"
//
//// npm using on gradle project
//tasks.register("npm-Install") {
//    group = "application"
//    description = "Installs dependencies from package.json"
//    tasks.appNpmInstall.exec();
//}
//
//task appNpmInstall(type: NpmTask) {
//    // src/main/resources/static
//    description = "Installs dependencies from package.json"
//    workingDir = file("/src/main/resources/static")
//    args = ['install']
//}